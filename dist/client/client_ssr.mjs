var l=class{constructor(){this.stateController=globalThis.eleganceStateController;this.renderer=globalThis.eleganceRenderer;console.log("%cElegance router is loading..","font-size: 30px; color: #aaffaa"),this.savedPages=new Map,this.onNavigateCallbacks=[],this.currentPage=window.location.pathname}log(e){console.log(`%c${e}`,"font-size: 15px; color: #aaffaa")}sleep(e){return new Promise(t=>setTimeout(t,e))}async navigate(e,t=!0){if(!e.startsWith("/"))throw new Error("Elegance router can only navigate to local pages.");this.log("Calling onNavigateCallbacks..");for(let n of this.onNavigateCallbacks)n();this.onNavigateCallbacks=[],this.log("Performing state cleanup.."),this.stateController.resetEphemeralSubjects(),this.stateController.cleanSubjectObservers(),this.log(`Navigating to page: ${e}`);let o=this.savedPages.get(e)??await this.getPage(e);if(!o)throw new Error("Failed to fetch page.");t&&history.pushState(null,"",e),this.currentPage=e,this.renderer.renderPage(o)}async getPage(e){if(this.savedPages.has(e))return;if(!e.startsWith("/"))throw new Error("Elegance router can only fetch local pages.");this.log(`Fetching URL: ${e}`);let t=e==="/"?"":"/",o=await fetch(e);if(!o.ok)throw`Could not load page at ${e}, received HTTP response status ${o.status}. ${o.statusText}`;let n=await o.text(),i=new DOMParser().parseFromString(n,"text/html").querySelector("script[e-pi]");if(!i){this.log(`Failed to fatch page, page ${e} did not define a <script> in it's head with attribute e-ip (short for elegancePageInfo)`);return}let f=document.createElement("script");f.textContent=i.textContent,document.head.appendChild(f),console.log(globalThis.__PAGE_INFOS__);return;try{let{page:s}=await import(e+t+"page.js");if(!s)throw new Error(`Page at ${e} could not be loaded.`);return this.addPage(e,s),s}catch(s){this.log(`Could not load the page at ${e}: ${s}`);return}}addPage(e,t){this.log(`Saving page with pathname: ${e}`),this.savedPages.set(e,t)}onNavigate(e){this.log("Adding onNavigateCallback."),this.onNavigateCallbacks.push(e)}setPopState(){window.onpopstate=e=>{e.preventDefault();let t=window.location.origin,o=e.target;if(o.origin!==t||this.currentPage===o.location.pathname)return;let r=window.location.href.replace(window.location.origin,"");this.navigate(r,!1)}}};var g=class{constructor(){console.log("%cElegance hydrator is loading..","font-size: 30px; color: #ffffaa")}log(e){console.log(`%c${e}`,"font-size: 15px; color: #aaffaa;")}hydratePage(e){let t=e.storedEventListeners,o=performance.now();for(let n of t){let r=document.querySelector(`[e-id="${n.eleganceID}"]`);if(!r)throw`No element with e-id: ${n.eleganceID} found when trying to hydrate page.`;if(!(r instanceof HTMLElement))throw"Only HTML Elements may be hydrated.";for(let c of n.eventListeners){let i=c.attributeName.toLowerCase();r[i]=c.eventListener}}this.log(`Finished hydrating in ${Math.round(performance.now()-o)}ms.`)}};var p=a=>{let e=[];for(let t of a)e.push({pathname:t.pn,renderingMethod:t.rm,storedEventListeners:t.sels?.map(o=>({eleganceID:o.id,eventListeners:o.els.map(n=>({attributeName:n.an,eventListener:n.el}))}))});return e},h=globalThis.__PAGE_INFOS__;if(!h)throw alert("Misconfigured Elegance.JS server, check console."),"globalThis.__PAGE_INFOS__ is not set, is corrupted, or is set inproperly. Make sure your server configuration sets a <script> with this variable.";var E=p(h),d=E.find(a=>a.pathname===window.location.pathname);if(!d)throw console.error("Page not defined in PageInfos."),"";if(d.renderingMethod!==1)throw"The SERVER_SIDE_RENDERING client may only be used if the page has been rendered via the SERVER_SIDE_RENDERING renderingMethod.";var u=new g,_=new l;globalThis.eleganceHydrator=u;u.hydratePage(d);
