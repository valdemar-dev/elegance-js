var d=["a","abbr","address","article","aside","b","body","blockquote","button","canvas","cite","code","colgroup","data","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","i","iframe","img","input","ins","kbd","label","legend","li","main","map","mark","menu","menuitem","meter","nav","object","ol","optgroup","option","output","p","pre","progress","q","section","select","small","span","strong","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","u","ul","var","video","details","datalist"],h=["audio","base","br","col","embed","link","meta","noscript","source","track","wbr","area","command","picture","progress","html","head"],f=["title","template"],c=(o,e,r)=>(...t)=>{let i={},a=[];return e&&t.length>0&&typeof t[0]=="object"?(i=t[0],r&&t.length>1&&(a=t.slice(1))):r&&t.length>0&&(a=t),()=>({tag:o,getOptions:i?()=>{let s={};for(let n of Object.keys(i)){let l=i[n];if(typeof l!="function"){s[n]=l;continue}if(n.startsWith("on")){s[n]=l;continue}s[n]=l()}return s}:()=>({}),children:a})};Object.assign(globalThis,{...d.reduce((o,e)=>(o[e]=c(e,!0,!0),o),{}),...f.reduce((o,e)=>(o[e]=c(e,!1,!0),o),{}),...h.reduce((o,e)=>(o[e]=c(e,!0,!1),o),{})});var g=class{constructor(){this.stateController=globalThis.eleganceStateController;this.renderer=globalThis.eleganceRenderer;console.log("%cElegance router is loading..","font-size: 30px; color: #aaffaa"),this.savedPages=new Map,this.onNavigateCallbacks=[],this.currentPage=window.location.pathname}log(e){console.log(`%c${e}`,"font-size: 15px; color: #aaffaa")}sleep(e){return new Promise(r=>setTimeout(r,e))}async navigate(e,r=!0){if(!e.startsWith("/"))throw new Error("Elegance router can only navigate to local pages.");this.log("Calling onNavigateCallbacks..");for(let i of this.onNavigateCallbacks)i();this.onNavigateCallbacks=[],this.log("Performing state cleanup.."),this.stateController.resetEphemeralSubjects(),this.stateController.cleanSubjectObservers(),this.log(`Navigating to page: ${e}`);let t=this.savedPages.get(e)??await this.getPage(e);if(!t)throw new Error("Failed to fetch page.");r&&history.pushState(null,"",e),this.currentPage=e,this.renderer.renderPage(t)}async getPage(e){if(this.savedPages.has(e))return;if(!e.startsWith("/"))throw new Error("Elegance router can only fetch local pages.");this.log(`Fetching URL: ${e}`);let r=e==="/"?"":"/",t=await fetch(e);if(!t.ok)throw`Could not load page at ${e}, received HTTP response status ${t.status}. ${t.statusText}`;let i=await t.text(),s=new DOMParser().parseFromString(i,"text/html");try{let{page:n}=await import(e+r+"page.js");if(!n)throw new Error(`Page at ${e} could not be loaded.`);return this.addPage(e,n),n}catch(n){this.log(`Could not load the page at ${e}: ${n}`);return}}addPage(e,r){this.log(`Saving page with pathname: ${e}`),this.savedPages.set(e,r)}async prefetch(e){await this.getPage(e)}onNavigate(e){this.log("Adding onNavigateCallback."),this.onNavigateCallbacks.push(e)}setPopState(){window.onpopstate=e=>{e.preventDefault();let r=window.location.origin,t=e.target;if(t.origin!==r||this.currentPage===t.location.pathname)return;let a=window.location.href.replace(window.location.origin,"");this.navigate(a,!1)}}};var p=o=>({renderingMethod:o.rm,storedEventListeners:o.sels?.map(e=>({eleganceID:e.id,eventListeners:e.els.map(r=>({attributeName:r.an,eventListener:r.el}))}))}),u=globalThis.__ELEGANCE_PAGE_INFO__;if(!u)throw alert("Misconfigured Elegance.JS server, check console."),"globalThis.__ELEGANCE_PAGE_INFO__ is not set, is corrupted, or is set inproperly. Make sure your server configuration sets a <script> with this variable.";var b=p(u);if(b.renderingMethod!==2)throw"The STATIC_GENERATION client may only be used if the page has been rendered via the STATIC_GENERATION renderingMethod.";throw"STATIC_GENERATION renderingMethod not implemented yet.";var y=new g;
